/*
 * trajectory.c
 *
 *  Created on: Jul 2, 2023
 *      Author: nguye
 */


#include "params.h"
#include <complex.h>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>

int generate_trajectory(float time[251],double x[251],double x_dot[251],double x_dot_dot[251],double y[251],double y_dot[251],double y_dot_dot[251],float z[251],float z_dot[251],float z_dot_dot[251],double psiInt[251]){
	float Ts = params.MPC_Cons_Ts;
	int innerDyn_length = params.MPC_Cons_innerDyn_length;
	int r = params.MPC_Cons_r;
	float f = params.MPC_Cons_f;
	int height_i = params.MPC_Cons_height_i;
	int height_f = params.MPC_Cons_height_f;
	int trajectory = params.MPC_Cons_trajectory;
	int d_height = height_f - height_i;
	/*Define the x, y, z dimensions for the drone trajectories*/
	double alpha[251];
	for(int i=0;i<252;i++){
		alpha[i] = 2*M_PI*f*time[i];
	}
	if(trajectory==1){
	for(int i=0;i<252;i++){
		x[i] = r*cos(alpha[i]);
		y[i] = r*sin(alpha[i]);
		z[i] = height_i+(d_height/(time[250])*time[i]);
		}
	int one_len_t[251]={1};
	for(int i=0;i<252;i++){
		x_dot[i] = -r*sin(alpha[i])*2*M_PI*f;
		y_dot[i] = r*sin(alpha[i])*2*M_PI*f;
		z_dot[i] = d_height/(time[250])*one_len_t[i];
		}
	for(int i=0;i<252;i++){
		x_dot_dot[i] = -r*cos(alpha[i])*pow((2*M_PI*f),2);
		y_dot_dot[i] = -r*sin(alpha[i])*pow((2*M_PI*f),2);
		z_dot_dot[i] = 0;
		}
	}
	/*Vector of x and y changes per sample time*/
	double dx[251],dy[251];
	float dz[251];
	for(int i=0;i<250;i++){
		dx[i+1]=x[i+1]-x[i];
		dy[i+1]=y[i+1]-y[i];
		dz[i+1]=y[i+1]-z[i];
	}
	//append
	dx[0] = dx[1];
	dy[0] = dy[1];
	dz[0] = dz[1];
	//Define the reference yaw angles
	float psi[251]={0};
	for(int i=0;i<251;i++){
		psiInt[i] = psi[i];
	}
	psi[0] = atan2(y[0],x[0])+M_PI/2;
	for(int i=1;i<251;i++){
		psi[i] = atan2(dy[i],dx[i]);
	}
	//We want the yaw angle to keep track the amount of rotations
	dpsi[250];
	return 0;
}

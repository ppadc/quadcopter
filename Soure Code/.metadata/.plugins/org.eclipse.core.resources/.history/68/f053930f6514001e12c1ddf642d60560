/*
 * mpc_simplification.c
 *
 *  Created on: Jun 27, 2023
 *      Author: nguye
 */

#include "params.h"
#include "../Rotational_matrix/rotational_matrix.h"
#include <complex.h>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include "../LPV_cont_discrete/LPV_cont_discrete.h"

int mpc_simplification(double Ad_matrix[6][6],double Bd_matrix[6][3],double Cd_matrix[3][6], double Dd_matrix[3][3],int *hz){
    /*This function creates the compact matrices for Model Predictive Control*/
	// db - double bar
	// dbt - double bar transpose
	// dc - double circumflex

	/*Create A_aug*/
	double A_aug[6][9];
	for(int i=0;i<6;i++){
		for(int j=0;j<6;j++){
			A_aug[i][j] = Ad_matrix[i][j];
		}
	}
	for(int i=0;i<6;i++){
		for(int j=6;j<9;j++){
			A_aug[i][j] = Bd_matrix[i][j-6];
		}
	}
	double temp_A[3][9] = {
	        {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0},
	        {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0},
	        {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0}
	};
	double A_aug_new[9][9];
	for(int i=0;i<6;i++){
		for(int j=0;j<9;j++){
			A_aug_new[i][j] = A_aug[i][j];
		}
	}
	for(int i=6;i<9;i++){
		for(int j=0;j<9;j++){
			A_aug_new[i][j] = temp_A[i-6][j];
		}
	}
	/*Create B_aug*/
	double temp_B[3][3] = {
		 {1.0, 0.0, 0.0},
		 {0.0, 1.0, 0.0},
		 {0.0, 0.0, 1.0}
	};
	double B_aug[9][3];
	for(int i=0;i<6;i++){
		for(int j=0;j<3;j++){
			B_aug[i][j] = Bd_matrix[i][j];
		}
	}
	for(int i=6;i<9;i++){
		for(int j=0;j<3;j++){
			B_aug[i][j] = temp_B[i-6][j];
		}
	}
	/*Create C_aug*/
	double temp_C={

	};
	return 0;
}

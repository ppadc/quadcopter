/*
 * mpc.c
 *
 *  Created on: Jun 25, 2023
 *      Author: nguye
 */
#include "delay_us.h"
#include "params.h"
#include "../open_loop_new_states/open_loop_new_states.h"
#include "../posision_controller/posision_control.h"
#include "../trajectory/trajectory.h"
#include "../mpc_simplification/mpc_simplification.h"
#include "../LPV_cont_discrete/LPV_cont_discrete.h"
#include <stdlib.h>
#include <stdio.h>
#include <math.h>

#ifndef APPLICATION_MPC_MPC_C_
#define APPLICATION_MPC_MPC_C_

float t[251]={0.0};
double x[251]={0.0},x_dot[251]={0.0},x_dot_dot[251]={0.0};
double y[251]={0.0},y_dot[251]={0.0},y_dot_dot[251]={0.0};
double z[251]={0.0},z_dot[251]={0.0},z_dot_dot[251]={0.0};
double psiInt[251]={0.0};
int genr_t = 0;
int plotl;

static void LPV_technique(){
	/*Generate the refence signals*/
	//Generate time refence
	if(genr_t == 0){
		for(int i=1;i<251;i++){
			t[i] = t[i] + 0.4;
		}
		plotl = sizeof(t) / sizeof(t[0]);
		generate_trajectory(t,x,x_dot,x_dot_dot,y,y_dot,y_dot_dot,z,z_dot,z_dot_dot,psiInt);
		//Load the initial state vector
		ut=0
		vt=0
		wt=0
		pt=0
		qt=0
		rt=0
		xt=0
		yt=-1
		zt=-1
		phit=0
		thetat=0
		psit=psi_ref[0];
	genr_t = 1;
	}
}


#endif /* APPLICATION_MPC_MPC_C_ */

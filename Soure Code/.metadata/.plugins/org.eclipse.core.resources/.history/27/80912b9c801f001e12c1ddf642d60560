/*
 * mpc.c
 *
 *  Created on: Jun 25, 2023
 *      Author: nguye
 */
#include "delay_us.h"
#include "params.h"
#include "../open_loop_new_states/open_loop_new_states.h"
#include "../posision_controller/posision_control.h"
#include "../trajectory/trajectory.h"
#include "../mpc_simplification/mpc_simplification.h"
#include "../LPV_cont_discrete/LPV_cont_discrete.h"
#include <stdlib.h>
#include <stdio.h>
#include <math.h>

#ifndef APPLICATION_MPC_MPC_C_
#define APPLICATION_MPC_MPC_C_

float t[251]={0.0};
double X[251]={0.0},X_dot[251]={0.0},X_dot_dot[251]={0.0};
double Y[251]={0.0},Y_dot[251]={0.0},Y_dot_dot[251]={0.0};
double Z[251]={0.0},Z_dot[251]={0.0},Z_dot_dot[251]={0.0};
double psi_ref[251]={0.0};
double ut,vt,wt,pt,qt,rt,xt,yt,zt,phit,thetat,psit;
int genr_t = 0;
int plotl;

static void LPV_technique(){
	/*Generate the refence signals*/
	//Generate time refence
	if(genr_t == 0){
		for(int i=1;i<251;i++){
			t[i] = t[i] + 0.4;
		}
		plotl = sizeof(t) / sizeof(t[0]);
		generate_trajectory(t,X,X_dot,X_dot_dot,Y,Y_dot,Y_dot_dot,Z,Z_dot,Z_dot_dot,psi_ref);
		//Load the initial state vector
		ut=params.MPC_Cons_ut; vt=params.MPC_Cons_vt; wt=params.MPC_Cons_wt;
		pt=params.MPC_Cons_pt; qt=params.MPC_Cons_qt; rt=params.MPC_Cons_rt;
		xt=params.MPC_Cons_xt; yt=params.MPC_Cons_yt; zt=params.MPC_Cons_zt;
		phit=0; thetat=0; psit=psi_ref[0];
	genr_t = 1;
	}
}


#endif /* APPLICATION_MPC_MPC_C_ */
